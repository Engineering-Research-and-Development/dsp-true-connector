name: Build Develop and increase version

on:
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  increment-version-and-build:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref != 'main'
    runs-on: ubuntu-latest

    env:
      GITHUB_USERNAME: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Increment version in pom.xml
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++;print}')
          mvn versions:set-property -Dproperty=revision -DnewVersion=$new_version-SNAPSHOT

      - name: Setup Git credentials
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Build
        shell: bash -l {0}
        run: |
          mvn --version
          mvn -B clean verify --file pom.xml
          git add pom.xml
          git commit -m "New development version $new_version"
          git push

  build-develop-after-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.head.ref == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build
        shell: bash -l {0}
        run: |
          mvn --version
          mvn -B clean verify --file pom.xml
          
  build-docker-image:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: engineering-research-and-development/dsp-true-connector
      
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
       
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
     
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
         context: ./connector
         file: ./connector/Dockerfile
         no-cache: true
         push: true
         tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev
         labels: ${{ steps.meta.outputs.labels }}
