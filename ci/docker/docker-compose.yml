services:
  ### minio (simulated S3 cloud storage)
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    networks:
      - network-a
      - network-b
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    networks:
      - network-a
      - network-b
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/dsp-true-connector-provider --ignore-existing;
      mc mb myminio/dsp-true-connector-consumer --ignore-existing;
      echo 'MinIO buckets created successfully';
      exit 0;
      "

  ### intstance a
  connector-a:
    image: ghcr.io/engineering-research-and-development/dsp-true-connector:test
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    logging:
      options:
        max-size: "200M"
    networks:
      - network-a
      - network-b
    container_name: connector-a
    ports:
      - "0.0.0.0:8888:2222" #FTP
      - "8080:8080"
    depends_on:
      - mongodb-a
      - minio
    environment:
      - "JDK_JAVA_OPTIONS=-Xmx1024m"
      - CALLBACK_ADDRESS=${CONNECTOR_A_CALLBACK_ADDRESS}
      - KEYSTORE_NAME=${CONNECTOR_A_KEYSTORE_NAME}
      - KEY_PASSWORD=${CONNECTOR_A_KEY_PASSWORD}
      - KEYSTORE_PASSWORD=${CONNECTOR_A_KEYSTORE_PASSWORD}
      - KEYSTORE_ALIAS=${CONNECTOR_A_KEYSTORE_ALIAS}
      - DAPS_KEYSTORE_NAME=${DAPS_KEYSTORE_NAME}
      - DAPS_KEYSTORE_PASSWORD=${DAPS_KEYSTORE_PASSWORD}
      - DAPS_KEYSTORE_ALIAS=${KEYSTORE_ALIAS}
      - TRUSTSTORE_NAME=${TRUSTSTORE_NAME}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
    volumes:
      - ./connector_a_resources:/config
      - ./tc_cert:/cert
      - ./:/home/nobody/ftp
      - tc_a_log:/var/log/tc


  mongodb-a:
    container_name: mongodb-a
    image: mongo:7.0.12
    networks:
      - network-a
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data_a:/data/db
      - mongodb-configdb_a:/data/configdb
  ### instance b

  connector-b:
    image: ghcr.io/engineering-research-and-development/dsp-true-connector:test
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    logging:
      options:
        max-size: "200M"
    networks:
      - network-a
      - network-b
    container_name: connector-b
    ports:
      - "0.0.0.0:8889:2222" #FTP
      - "8090:8080"
    depends_on:
      - mongodb-b
      - minio
    environment:
      - "JDK_JAVA_OPTIONS=-Xmx1024m"
      - CALLBACK_ADDRESS=${CONNECTOR_B_CALLBACK_ADDRESS}
      - KEYSTORE_NAME=${CONNECTOR_B_KEYSTORE_NAME}
      - KEY_PASSWORD=${CONNECTOR_B_KEY_PASSWORD}
      - KEYSTORE_PASSWORD=${CONNECTOR_B_KEYSTORE_PASSWORD}
      - KEYSTORE_ALIAS=${CONNECTOR_B_KEYSTORE_ALIAS}
      - DAPS_KEYSTORE_NAME=${DAPS_KEYSTORE_NAME}
      - DAPS_KEYSTORE_PASSWORD=${DAPS_KEYSTORE_PASSWORD}
      - DAPS_KEYSTORE_ALIAS=${KEYSTORE_ALIAS}
      - TRUSTSTORE_NAME=${TRUSTSTORE_NAME}
      - TRUSTSTORE_PASSWORD=${TRUSTSTORE_PASSWORD}
    volumes:
      - ./connector_b_resources:/config
      - ./tc_cert:/cert
      - ./:/home/nobody/ftp
      - tc_b_log:/var/log/tc

  mongodb-b:
    container_name: mongodb-b
    image: mongo:7.0.12
    networks:
      - network-b
    ports:
      - "27018:27017"
    volumes:
      - mongodb-data_b:/data/db
      - mongodb-configdb_b:/data/configdb

networks:
  network-a: { }
  network-b: { }

volumes:
  minio_data: { }
  tc_a_log: { }
  mongodb-data_a: { }
  mongodb-configdb_a: { }
  tc_b_log: { }
  mongodb-data_b: { }
  mongodb-configdb_b: { }
