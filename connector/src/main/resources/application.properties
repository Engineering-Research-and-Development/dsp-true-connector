#spring.datasource.generate-unique-name=false
#spring.datasource.name=trueconnector

spring.application.name=connector_consumer
application.automatic.negotiation=false

server.port=8080
application.callback.address=http://localhost:8080

spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=-1
spring.servlet.multipart.enabled=true
server.tomcat.max-http-form-post-size=-1

spring.application.label= latest

# MongoDB connection settings
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=true_connector_consumer
#spring.data.mongodb.username=tc
#spring.data.mongodb.password=password

# SSL Config
spring.ssl.bundle.jks.connector.key.alias = execution-core-container
spring.ssl.bundle.jks.connector.key.password = changeit
spring.ssl.bundle.jks.connector.keystore.location = classpath:ssl-server.jks
spring.ssl.bundle.jks.connector.keystore.password = changeit
spring.ssl.bundle.jks.connector.keystore.type = JKS
spring.ssl.bundle.jks.connector.truststore.type=JKS
spring.ssl.bundle.jks.connector.truststore.location=classpath:truststoreEcc.jks
spring.ssl.bundle.jks.connector.truststore.password=allpassword

server.ssl.enabled=false
server.ssl.key-alias=connector
server.ssl.key-password=password
server.ssl.key-store=classpath:connector-a.jks
server.ssl.key-store-password=password

management.endpoints.enabled-by-default=true
management.endpoint.info.enabled=true
#management.security.enabled=false
management.endpoints.web.exposure.include=*
management.endpoint.env.post.enabled=true 

# CORS configuration
# Allow specific origins
application.cors.allowed.origins=
# Allow specific HTTP methods
application.cors.allowed.methods=
# Allow specific headers
application.cors.allowed.headers=
# Allow user credentials
application.cors.allowed.credentials=

#### Connector ID
application.connectorid=connector-consumer-id
application.isconsumer=true

application.protocol.authentication.enabled=true

##### DAPS
application.daps.enabledDapsInteraction=false
application.daps.extendedTokenValidation=false
##Cache token(true) or always use new token(false)
application.daps.tokenCaching=false
##Fetch and cache token on startup. application.daps.tokenCaching must be true!
application.daps.fetchTokenOnStartup=false
application.daps.dapsUrl=https://daps.aisec.fraunhofer.de/v2/token
application.daps.dapsJWKSUrl=https://daps.aisec.fraunhofer.de/.well-known/jwks.json

###### USAGE CONTROL
application.usagecontrol.enabled=true
application.usagecontrol.constraint.location=EU
application.usagecontrol.constraint.purpose=demo

spring.ssl.bundle.jks.daps.keystore.location = classpath:ecc-consumer.p12
spring.ssl.bundle.jks.daps.keystore.password = password
spring.ssl.bundle.jks.daps.key.alias = 1
spring.ssl.bundle.jks.daps.keystore.type = PKCS12

##### FTP
application.ftp.host=localhost
application.ftp.defaultTimeoutSeconds=1001

application.ftp.serverPort=2222
application.ftp.serverUsername=ftp_server
application.ftp.serverFolder=

application.ftp.clientUsername=ftp_client
application.ftp.downloadFolder=

## Password strength 
application.password.validator.minLength=8
application.password.validator.maxLength=16
application.password.validator.minLowerCase=1
application.password.validator.minUpperCase=1
application.password.validator.minDigit=1
application.password.validator.minSpecial=1

##### S3 Storage Configuration
s3.endpoint=http://localhost:9000
s3.accessKey=minioadmin
s3.secretKey=minioadmin
s3.region=us-east-1
s3.bucketName=dsp-true-connector
# Public S3 endpoint (can be used with reverse proxy)
s3.externalPresignedEndpoint=http://localhost:9000